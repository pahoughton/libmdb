/**
   File:        AppParam.C
   Project:	%PRJ%
   Desc:        
  
    Command line argument parser implementation
  
   Notes:
  
    Generated by %PERL_PKG% from %TMPL_SRC%
  
   Author:      %AUTHOR%
   Created:     %CREATED%
  
   Revision Info: (See cvs log for revision history)
  
    $Author$
    $Date$
    $Name$
    $Revision$
    $State$

  $Id$
**/

#include "AppParam.hh"
#include "AppDefines.h"

%DATASET_HH%

// NEW_TABLE - any non Str or FilePath vars should be initialized.

AppParam::AppParam(
  int &		mainArgc,
  char **	mainArgv,
  const char *	mainVer
  )
  : Param( mainArgc, mainArgv, mainVer, true, "ERROR | WARN | INFO" ),
    %TABLE_DIR_INIT%
    infoV( false ),
    recSizeV( false ),
    sizeV( false ),
    dumpTableV( false )
{
  parseArgs();
}

AppParam::~AppParam( void )
{
}

bool
AppParam::parseArgs( int pArgc, char * pArgv[] )
{
  bool status = Param::parseArgs( pArgc, pArgv );

  return( status ? parseArgs() : status );
}

bool
AppParam::parseArgs( void )
{
  bool status = Param::parseArgs();

  status &= argStr( tableDirV,
		    "DIR",
		    "table directory",
		    0,
		    false,
		    "table-dir" );

  status &= argFlag( infoV,
		     "dump table info.",
		     0,
		     "info" );

  status &= argFlag( recSizeV,
		     "show table record size.",
		     0,
		     "rec-size" );

  status &= argFlag( sizeV,
		     "show num recs in table.",
		     0,
		     "size" );
  
  status &= argFlag( dumpTableV,
		     "dump entire table.",
		     0,
		     "dump" );

  // NEW_TABLE - not all of these will be needed.
  %KEY_VALUE_ARGS%
     
  // status &= argStr( varV, "desc", "argid", "envVar" );

  return( status );
}


// Local Variables:
// mode:c++
// End:

