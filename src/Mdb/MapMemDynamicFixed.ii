#ifndef _MapMemDynamicFixed_ii_
#define _MapMemDynamicFixed_ii_
//
// File:        MapMemDynamicFixed.ii
// Project:	Mdb
// Desc:        
//
//  	Inline source for MapMemDynamicFixed
//
// Author:      Paul A. Houghton - (paul.houghton@wcom.com)
// Created:     06/18/97 06:14
//
// Revision History: (See end of file for Revision Log)
//
//  Last Mod By:    $Author$
//  Last Mod:	    $Date$
//  Version:	    $Revision$
//
//  $Id$
//

#include <StlUtilsMisc.hh>

#if defined( MDB_DEBUG )
#define inline
#endif

inline
MapMemDynamicFixed::size_type
MapMemDynamicFixed::getRecSize( void ) const
{
  return( mapInfo() ? mapInfo()->recSize : 0 );
}

inline
MapMemDynamicFixed::size_type
MapMemDynamicFixed::getAllocNumRecs( void ) const
{
  return( mapInfo() ? mapInfo()->allocNumRecs : 0 );
}

inline
DumpInfo< MapMemDynamicFixed >
MapMemDynamicFixed::dump( const char * prefix, bool showVer ) const
{
  return( DumpInfo< MapMemDynamicFixed >( *this, prefix, showVer ) );
}

inline
MapMemDynamicFixed::Loc
MapMemDynamicFixed::firstNode( void ) const
{
  return( DwordAlign( sizeof( MapDynamicFixedInfo ) ) );
}

inline
MapMemDynamicFixed::Loc
MapMemDynamicFixed::lastNode( void ) const
{
  return( ( ( ((getMapSize() - firstNode()) / mapInfo()->recSize) - 1) *
	  mapInfo()->recSize ) + firstNode() );
}

inline
const MapMemDynamicFixed::FreeNode &
MapMemDynamicFixed::freeList( void ) const
{
  return( mapInfo()->freeList );
}

inline
MapMemDynamicFixed::FreeNode &
MapMemDynamicFixed::freeList( void )
{
  return( mapInfo()->freeList );
}

inline
const MapMemDynamicFixed::FreeNode &
MapMemDynamicFixed::freeNode( Loc f ) const
{
  return( *( (const FreeNode *)( (const char *)getBase() + f ) ));
}
  
inline
MapMemDynamicFixed::FreeNode &
MapMemDynamicFixed::freeNode( Loc f )
{
  return( *( (FreeNode *)( (char *)getBase() + f ) ));
}
  

inline
MapMemDynamicFixed::MapDynamicFixedInfo *
MapMemDynamicFixed::mapInfo( void )
{
  return( (MapDynamicFixedInfo *)getBase() );
}


inline
const MapMemDynamicFixed::MapDynamicFixedInfo *
MapMemDynamicFixed::mapInfo( void ) const
{
  return( (const MapDynamicFixedInfo *)getBase() );
}

  

#if defined( inline )
#undef inline
#endif

// Revision Log:
// 
// $Log$
// Revision 4.1  2001/07/27 00:57:43  houghton
// Change Major Version to 4
//
// Revision 2.4  1997/09/17 16:56:08  houghton
// Changed for new library rename to StlUtils
//
// Revision 2.3  1997/07/13 11:27:39  houghton
// Cleanup.
// Added firstNode(), lastNode(), freeList() & freeNode().
//
// Revision 2.2  1997/06/19 12:02:33  houghton
// Class was renamed from MapMemFixedDynamic to MapMemDynamicFixed.
//
// Revision 2.1  1997/06/18 14:13:55  houghton
// Initial Version
//
//
#endif // ! def _MapMemDynamicFixed_ii_ 
