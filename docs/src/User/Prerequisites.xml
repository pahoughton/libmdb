<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE prjdoc
	PUBLIC "-//DocTools//DTD General Project Doc//EN" 
	       "dtd/DocTools/prjdoc.dtd" [

 <!ENTITY TOP.DIR "..">
 <!ENTITY % projectEntity
	PUBLIC "-//Project//ENTITY Project Variables//EN"
	       "../dtd/project.ent">
 %projectEntity;
]>
<?xml-stylesheet
    href="xsl/DocTools/html/prjdoc.xsl"
    type="text/xsl" ?>

<prjdoc>
  <dochead>
    <title>
       &PRJ.NAME; Prerequisites
    </title>
    <subtitle>
       
    </subtitle>
    <docdesc>
      Describes the prerequisites for &PRJ.NAME;. Although most of
      the support tools and libraries needed are automatically setup
      and installed, there are a few components that must be available
      before the automated process will work.
    </docdesc>
    <keywords>
       
    </keywords>
    <authorgrp>
      <author fullname="Paul Houghton"
	      email="Paul.Houghton@wcom.com"/>
    </authorgrp>
    <projectname>
      &PRJ.NAME;
    </projectname>
    <docversion
        created="02/13/01 14:08"
        verprj="%PP%"
        veritem="%PI% (%PF%)"
	verlastmodby="%PO%"
        verlastmod="%PRT%"
        verversion="%PIV%"
	verstatus="%PS%"
        verversionid="%PID%"/>
    <contact>&PRJ.XML.CONTACT;</contact>
  </dochead>

   <body>
    <p>
      Note: this document assumes you are using ksh or some dirivative
      on a Unix based system.
    </p>
    <sect>
      <heading>How to check for a program in your path.</heading>
      <sectbody>
	<p>
	</p>
      </sectbody>
    </sect>
    
    <sect>
      <heading>Prerequisites</heading>
      <sectbody>
	<p>
	  Use the following command to verify a program is in your path,
	  replacing `CMD' with the name of the program (i.e. replace cmd
	  with make).
	</p>
	<p>
	  <indent>
	    <code>
	      type CMD
	    </code>
	  </indent>
	</p>
	<p>
	  If it reports the command is `not found', you will need to add
	  the correct directory for the command to your path or
	  install the program.
	</p>
      </sectbody>
    </sect>
    <sect>
      <heading id="make">make Utility</heading>
      <sectbody>
	<p>
	  All unix systems I know of come with a basic make utility
	  program. The only thing you really need to worry about is
	  finding it and making sure it is in your path.
	</p>
	<p>
	  Here are the locations for the make program on some Unix
	  Systems:
	</p>
	<p>
	  <table>
	    <tr><td>SunOS:</td><td>/usr/ccs/bin/make</td></tr>
	    <tr><td>AIX:</td><td>/usr/bin/make</td></tr>
	  </table>
	</p>
      </sectbody>
    </sect>

    <sect>
      <heading id="cc">ANSI C Compiler</heading>
      <sectbody>
	<p>
	  The need for a C compiler may not be apparent, but many of
	  the <doc doc="../Devel/SupportTools">Support Tools</doc>
	  need to be compiled and installed with an ANSI C
	  compiler. If one is not available, you could concider using
	  'gcc', which is GNU's ANSI c compiler (for more info on gcc,
	  see <ulink>http://www.gnu.org</ulink>).
	</p>
	<p>
	  To check for a 'C' compiler, look for the 'cc' command.
	</p>
	<p>
	  On Sun systems, the ANSI compiler is a licensed
	  product and not installed with the OS if the version of cc
	  you found was under /usr/ucb, you need a different
	  compiler. You might try checking under /opt/SUNWspro/bin.
	</p>
      </sectbody>
    </sect>
    
    <sect>
      <heading id="gzip">GNU gzip</heading>
      <sectbody>
	<p>
	  GNU's gzip is a compression/decompression program similar
	  to the standard unix compress utility. For more information
	  about this program, try the link for 'gzip' in the
	  <doc doc="../Devel/SupportTools">Support Tools</doc>
	  document.
	</p>
	<p>
	  If gzip is not in your path, check for it in /usr/local/bin
	  and /Tools/bin. If you can not find it in any of these
	  directories, you will have to retrieve a copy of the
	  sources, then build and install it. This is a fairly
	  straight forward process, that involves exectuting the
	  commands listed below (note: you will need a 'c' compiler) as
	  stated <xref ref="cc">above</xref>.
	</p>
	<p>
	  A tar file containg the sources for gzip is available for
	  anonymous ftp from:
	</p>
	<p>
	  <indent>
	    <ulink>
	      ftp://sideswipe.wcom.com/pub/tools/gzip-1.2.4.tar
	    </ulink>
	  </indent>
	</p>
	<p>
	  <indent>
	    <code>
	      tar xf gzip-1.2.4.tar<br/>
	      cd gzip-1.2.4<br/>
	      configure --prefix=~/tools<br/>
	      make install<br/>
	      PATH=$PATH:~/tools/bin<br/>
	    </code>
	  </indent>
	</p>
      </sectbody>
    </sect>
    
    <sect>
      <heading id="cxx">ANSI C++ Compiler</heading>
      <sectbody>
	<p>
	  Although you should be able to use this project on any
	  platform with an standard conforming compiler, the only one
	  that is has been tested with to date is SunWorkshop 6.1 on
	  Solaris.
	</p>
      </sectbody>
    </sect>

    <sect>
      <heading id="java">Java Development Kit 1.3.0</heading>
      <sectbody>
	<p>
	  Verify that the 'java' command is in your path and that the
	  output from the version option (java -version) shows version
	  1.3.0 or above.
	</p>
	<p>
	  If you did not find the java command or it was an older
	  version, the Java Development Kit (JDK) is available for most
	  platforms on
	  <ulink>http://java.sun.com/</ulink>. Follow the
	  installation instructions that come with the package and
	  then verify the `java' and `javac' commands are in your
	  path.
	</p>
      </sectbody>
    </sect>
    
  </body>
</prjdoc>

<!-- Revision Log:

#
# %PL%
#

-->

<!-- Xemacs Local Variables -->

<!-- Local Variables: -->
<!-- mode:xml -->
<!-- End: -->
